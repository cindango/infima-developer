{
  "openapi": "3.0.0",
  "info": {
    "description": "Programmatically access our prepayment data and predictive analytics to seamlessly integrate with your own systems and workflow.\n\n# Authentication\nWe use [Bearer Authentication](https://tools.ietf.org/html/rfc6750), and all requests to the API must contain a field named `Authorization` in the request header. The field must contain the access token that was issued to you by Infima. If you do not have an access token and would like to get one, then please contact us at [info@infima.io](mailto:info@infima.io). The server responds with a `401` error if the access token is invalid or missing. See below for an example request.\n\n```bash\ncurl -X GET https://api.infima.io/api/v1/pool/get_all_servicers\n  -H \"Authorization: Bearer <your accesstoken here>\"\n```",
    "title": "Infima API (v1.0)",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.infima.io/"
    }
  ],
  "paths": {
    "/api/v0/market/get_service_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.BinaryInfo"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "MarketV0"
        ],
        "operationId": "MarketV0_GetServiceInfo"
      }
    },
    "/api/v0/market/get_story_view": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/market.v0.GetStoryViewResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "MarketV0"
        ],
        "operationId": "MarketV0_GetStoryView",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/market.v0.GetStoryViewRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v0/market/get_view": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/market.v0.GetViewResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "MarketV0"
        ],
        "operationId": "MarketV0_GetView",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/market.v0.GetViewRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v0/pricing/get": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v0.GetResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid: all provided cusips may not be valid ones."
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PricingV0"
        ],
        "description": "Fetch pricing predictions as of a date.",
        "operationId": "PricingV0_Get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pricing.v0.GetRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v0/pricing/get_available_as_ofs": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pricing.v0.GetAvailableAsOfsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid: symbol is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PricingV0"
        ],
        "description": "Available as-of dates of pricing for a symbol.",
        "operationId": "PricingV0_GetAvailableAsOfs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pricing.v0.GetAvailableAsOfsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v0/pricing/get_service_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.BinaryInfo"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PricingV0"
        ],
        "operationId": "PricingV0_GetServiceInfo"
      }
    },
    "/api/v0/search/delete_query": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search.v0.DeleteQueryResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "SearchV0"
        ],
        "operationId": "SearchV0_DeleteQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/search.v0.DeleteQueryRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v0/search/get_all_query_names": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search.v0.GetAllQueryNamesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "SearchV0"
        ],
        "operationId": "SearchV0_GetAllQueryNames"
      }
    },
    "/api/v0/search/get_query": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search.v0.GetQueryResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "SearchV0"
        ],
        "operationId": "SearchV0_GetQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/search.v0.GetQueryRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v0/search/get_service_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.BinaryInfo"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "SearchV0"
        ],
        "operationId": "SearchV0_GetServiceInfo"
      }
    },
    "/api/v0/search/save_query": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search.v0.SaveQueryResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "SearchV0"
        ],
        "operationId": "SearchV0_SaveQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/search.v0.SaveQueryRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v0/search/search_pools": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search.v0.SearchPoolsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "SearchV0"
        ],
        "description": "Search for pools within a cohort universe.",
        "operationId": "SearchV0_SearchPools",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/search.v0.SearchPoolsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/bulk/predictions/get_available_as_ofs": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetAvailableAsOfsBulkResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1",
          "PredictionExposed"
        ],
        "description": "Get the available dates for which we have published predictions.\nThis will return all the as-of dates along with their last published timestamps.\n",
        "operationId": "PredictionV1_GetAvailableAsOfsBulk",
        "summary": "Get all the available as-of dates.",
        "x-codeSamples": [
          {
            "label": "Python",
            "lang": "Python",
            "source": "import requests\naccesstoken = \"YOUR ACCESS TOKEN HERE\"\nurl = \"https://api.infima.io/api/v1/bulk/predictions/get_available_as_ofs\"\nheaders = { \"Authorization\": \"Bearer \" + accesstoken }\nresponse = requests.get(url, headers = headers)\nprint(response.text)\n"
          },
          {
            "label": "Node",
            "lang": "Javascript",
            "source": "const axios = require('axios')\nconst accesstoken = 'YOUR ACCESS TOKEN HERE'\naxios({\n  method: 'GET',\n  url: 'https://api.infima.io/api/v1/bulk/predictions/get_available_as_ofs',\n  headers: { Authorization: `Bearer ${accesstoken}` }\n})\n.catch(error => console.error(error.stack))\n.then(response => console.log(JSON.stringify(response.data, null, '  ')))\n"
          },
          {
            "label": "cURL",
            "lang": "cURL",
            "source": "ACCESS_TOKEN='YOUR ACCESS TOKEN HERE'\ncurl --location -g \\\n  --request GET 'https://api.infima.io/api/v1/bulk/predictions/get_available_as_ofs' \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\"\n"
          }
        ]
      }
    },
    "/api/v1/bulk/predictions/get_csv_file": {
      "get": {
        "parameters": [
          {
            "description": "As-of date. Prediction as-of date\n* A valid request should have the as-of date in the format of YYYY-MM-DD\n* In case the as-of date is not specified, the system takes the latest as-of date.",
            "in": "query",
            "name": "as_of",
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetCSVFileResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 3,
                      "details": [],
                      "message": "as_of date invalid"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the provided request is invalid: invalid as of date"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1",
          "PredictionExposed"
        ],
        "description": "Get the predictions for a given as-of date served as a CSV file URL.\n\nThe response will contain a pre-signed URL pointing to a gzip-compressed\npredictions CSV file with the following schema:\n\n| field | data type | description |\n| ----- | ----------| ----------- |\n| symbol | string | CUSIP or cohort name |\n| smm | double | Predicted single month mortality |\n| cpr | double | Predicted conditional prepayment rate |\n| period | date | The month which is being predicted |\n",
        "operationId": "PredictionV1_GetCSVFile",
        "summary": "Retrieve predictions CSV file",
        "x-codeSamples": [
          {
            "label": "Python",
            "lang": "Python",
            "source": "import requests\naccesstoken = \"YOUR ACCESS TOKEN HERE\"\nurl = \"https://api.infima.io/api/v1/bulk/predictions/get_csv_file\"\nheaders = { \"Authorization\": \"Bearer \" + accesstoken }\nparams = {\n  \"as_of\": \"2022-01-01\"\n}\nresponse = requests.get(url, headers = headers, params = params)\nprint(response.text)\n"
          },
          {
            "label": "Node",
            "lang": "Javascript",
            "source": "const axios = require('axios')\nconst accesstoken = 'YOUR ACCESS TOKEN HERE'\naxios({\n  method: 'GET',\n  url: 'https://api.infima.io/api/v1/bulk/predictions/get_csv_file',\n  headers: { Authorization: `Bearer ${accesstoken}` },\n  params: {\n    as_of: \"2022-01-01\"\n  }\n})\n.catch(error => console.error(error.stack))\n.then(response => console.log(JSON.stringify(response.data, null, '  ')))\n"
          },
          {
            "label": "cURL",
            "lang": "cURL",
            "source": "ACCESS_TOKEN='YOUR ACCESS TOKEN HERE'\ncurl --location -g \\\n  --request GET 'https://api.infima.io/api/v1/bulk/predictions/get_csv_file?as_of=2022-01-01' \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\"\n"
          }
        ]
      }
    },
    "/api/v1/bulk/predictions/get_recent_updates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetRecentUpdatesBulkResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1",
          "PredictionExposed"
        ],
        "description": "Fetches every prediction publication the last 14 days. This includes any\ncorrections made to as-of dates older than 14 days.\n",
        "operationId": "PredictionV1_GetRecentUpdatesBulk",
        "summary": "Get the most recent prediction updates in the last 14 days.",
        "x-codeSamples": [
          {
            "label": "Python",
            "lang": "Python",
            "source": "import requests\naccesstoken = \"YOUR ACCESS TOKEN HERE\"\nurl = \"https://api.infima.io/api/v1/bulk/predictions/get_recent_updates\"\nheaders = { \"Authorization\": \"Bearer \" + accesstoken }\nresponse = requests.get(url, headers = headers)\nprint(response.text)\n"
          },
          {
            "label": "Node",
            "lang": "Javascript",
            "source": "const axios = require('axios')\nconst accesstoken = 'YOUR ACCESS TOKEN HERE'\naxios({\n  method: 'GET',\n  url: 'https://api.infima.io/api/v1/bulk/predictions/get_recent_updates',\n  headers: { Authorization: `Bearer ${accesstoken}` }\n})\n.catch(error => console.error(error.stack))\n.then(response => console.log(JSON.stringify(response.data, null, '  ')))\n"
          },
          {
            "label": "cURL",
            "lang": "cURL",
            "source": "ACCESS_TOKEN='YOUR ACCESS TOKEN HERE'\ncurl --location -g \\\n  --request GET 'https://api.infima.io/api/v1/bulk/predictions/get_recent_updates' \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\" -vvvvv\n"
          }
        ]
      }
    },
    "/api/v1/cohort/check_coverage": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.CheckCoverageResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_CheckCoverage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.CheckCoverageRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/check_exists": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.CheckExistsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_CheckExists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.CheckExistsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/find": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.FindResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_Find",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.FindRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/get_actual_prepayments": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.GetActualPrepaymentsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_GetActualPrepayments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.GetActualPrepaymentsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/get_cohort_summary": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.GetCohortSummaryResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_GetCohortSummary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.GetCohortSummaryRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/get_covered_cohort": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.GetCoveredCohortsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_GetCoveredCohorts"
      }
    },
    "/api/v1/cohort/get_member_lists": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.GetMemberListsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_GetMemberLists",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.GetMemberListsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/get_member_pools": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.GetMemberPoolsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_GetMemberPools",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.GetMemberPoolsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/get_pool_memberships": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cohort.v1.GetPoolMembershipsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_GetPoolMemberships",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cohort.v1.GetPoolMembershipsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/cohort/get_service_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.BinaryInfo"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "CohortV1"
        ],
        "operationId": "CohortV1_GetServiceInfo"
      }
    },
    "/api/v1/pool/check_coverage": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.CheckCoverageResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_CheckCoverage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.CheckCoverageRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/find": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.FindResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_Find",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.FindRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_Get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_actual_prepayments": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetActualPrepaymentsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetActualPrepayments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetActualPrepaymentsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_all_servicers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetAllServicersResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetAllServicers"
      }
    },
    "/api/v1/pool/get_characteristics": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetCharacteristicsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetCharacteristics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetCharacteristicsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_current_factor_date": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetCurrentFactorDateResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetCurrentFactorDate"
      }
    },
    "/api/v1/pool/get_cusip_from_pool_number": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetCusipFromPoolNumberResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetCusipFromPoolNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetCusipFromPoolNumberRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_general_distributions": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetGeneralDistributionsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetGeneralDistributions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetGeneralDistributionsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_geographic_distribution": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetGeographicDistributionResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetGeographicDistribution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetGeographicDistributionRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_quartiles": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetQuartilesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetQuartiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetQuartilesRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_service_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.BinaryInfo"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetServiceInfo"
      }
    },
    "/api/v1/pool/get_servicers": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetServicersResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetServicers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetServicersRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/pool/get_summary": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pool.v1.GetSummaryResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "error code",
                      "details": null,
                      "message": "invalid request"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 401,
                      "details": null,
                      "message": "not authorized"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "PAGE_NOT_FOUND",
                      "details": null,
                      "message": "url not found <URL>"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Not found"
          },
          "500": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": 500,
                      "details": [],
                      "message": "error message"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PoolV1"
        ],
        "operationId": "PoolV1_GetSummary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pool.v1.GetSummaryRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/prediction/get": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid: some cusips may not be valid ones."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1"
        ],
        "description": "Fetch pool and cohort prepayment predictions for an as-of date, default to today.",
        "operationId": "PredictionV1_Get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prediction.v1.GetRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/prediction/get_available_as_ofs": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetAvailableAsOfsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid: symbol is invalid."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1"
        ],
        "description": "Available as-of dates of predictions for a symbol.",
        "operationId": "PredictionV1_GetAvailableAsOfs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prediction.v1.GetAvailableAsOfsRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/prediction/get_latest_as_of": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetLatestAsOfResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1"
        ],
        "operationId": "PredictionV1_GetLatestAsOf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prediction.v1.GetLatestAsOfRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/prediction/get_n_months_ahead": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetNMonthsAheadResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid: some cusips may not be valid ones."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1"
        ],
        "description": "Fetch historical pool and cohort N number of months ahead prepayment predictions.",
        "operationId": "PredictionV1_GetNMonthsAhead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prediction.v1.GetNMonthsAheadRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/prediction/get_one_month_ahead": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prediction.v1.GetOneMonthAheadResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request is invalid: some cusips may not be valid ones."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1"
        ],
        "description": "Fetch historical pool and cohort one months ahead prepayment predictions.",
        "operationId": "PredictionV1_GetOneMonthAhead",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prediction.v1.GetOneMonthAheadRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v1/prediction/get_service_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/core.BinaryInfo"
                }
              }
            },
            "description": "A successful response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request not authorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Returned when the resource does not exist."
          },
          "408": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "When the request times out"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "Something wrong happened"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/google.rpc.Status"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "PredictionV1"
        ],
        "operationId": "PredictionV1_GetServiceInfo"
      }
    }
  },
  "components": {
    "schemas": {
      "cohort.v1.Association": {
        "properties": {
          "cohort": {
            "type": "string"
          },
          "cusip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "cohort.v1.CheckCoverageRequest": {
        "properties": {
          "cohorts": {
            "description": "Cohorts to check coverage",
            "example": [
              "FNCL 2.0 2021",
              "FNCL 2.5 2021"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cohorts"
        ],
        "type": "object"
      },
      "cohort.v1.CheckCoverageResponse": {
        "properties": {
          "summary": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cohort.v1.CohortCoverageSummary"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.CheckExistsRequest": {
        "properties": {
          "cohort": {
            "type": "string"
          }
        },
        "required": [
          "cohort"
        ],
        "type": "object"
      },
      "cohort.v1.CheckExistsResponse": {
        "properties": {
          "exists": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "cohort.v1.Cohort": {
        "properties": {
          "coupon": {
            "format": "double",
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "numPools": {
            "format": "int32",
            "type": "integer"
          },
          "story": {
            "$ref": "#/components/schemas/mbs.CohortStory"
          },
          "ticker": {
            "type": "string"
          },
          "vintage": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "cohort.v1.CohortCoverageSummary": {
        "properties": {
          "cohort": {
            "type": "string"
          },
          "summary": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolCoverageSummary"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.CohortMemberList": {
        "properties": {
          "cohort": {
            "type": "string"
          },
          "cusips": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cohort.v1.CohortMemberPools": {
        "properties": {
          "cohort": {
            "type": "string"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/pool.v1.Pool"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cohort.v1.CohortSummary": {
        "properties": {
          "averageAols": {
            "format": "double",
            "type": "number"
          },
          "averageFico": {
            "format": "double",
            "type": "number"
          },
          "averageLs": {
            "format": "double",
            "type": "number"
          },
          "averageLtv": {
            "format": "double",
            "type": "number"
          },
          "averageRefi": {
            "format": "double",
            "type": "number"
          },
          "averageSecurityFactor": {
            "format": "double",
            "type": "number"
          },
          "averageWac": {
            "format": "double",
            "type": "number"
          },
          "averageWala": {
            "format": "double",
            "type": "number"
          },
          "averageWam": {
            "format": "double",
            "type": "number"
          },
          "coupon": {
            "format": "double",
            "type": "number"
          },
          "issUpb": {
            "format": "double",
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "numLoans": {
            "format": "int32",
            "type": "integer"
          },
          "numPools": {
            "format": "int32",
            "type": "integer"
          },
          "story": {
            "$ref": "#/components/schemas/mbs.CohortStory"
          },
          "ticker": {
            "type": "string"
          },
          "upb": {
            "format": "double",
            "type": "number"
          },
          "vintage": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "cohort.v1.FindRequest": {
        "properties": {
          "coupon": {
            "format": "double",
            "type": "number"
          },
          "story": {
            "$ref": "#/components/schemas/mbs.CohortStory"
          },
          "ticker": {
            "type": "string"
          },
          "vintage": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "cohort.v1.FindResponse": {
        "properties": {
          "cohorts": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cohort.v1.Cohort"
            },
            "description": "Mapping of cohort name to cohort object.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.GetActualPrepaymentsRequest": {
        "properties": {
          "cohorts": {
            "description": "Cohorts to fetch.",
            "example": [
              "FNCL 2.0 2021",
              "FNCL 2.5 2021"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "factorDateRange": {
            "$ref": "#/components/schemas/core.FactorDateRange",
            "description": "Period for which to fetch the data, default to the current period."
          }
        },
        "required": [
          "cohorts"
        ],
        "type": "object"
      },
      "cohort.v1.GetActualPrepaymentsResponse": {
        "properties": {
          "prepayments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/prepayment.PrepaymentActuals"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.GetCohortSummaryRequest": {
        "properties": {
          "cohorts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          }
        },
        "required": [
          "cohorts"
        ],
        "type": "object"
      },
      "cohort.v1.GetCohortSummaryResponse": {
        "properties": {
          "summary": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cohort.v1.CohortSummary"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.GetCoveredCohortsResponse": {
        "properties": {
          "cohorts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cohort.v1.GetMemberListsRequest": {
        "properties": {
          "cohorts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate",
            "description": "Factor date for cohort members lookup.",
            "format": "date"
          }
        },
        "required": [
          "cohorts"
        ],
        "type": "object"
      },
      "cohort.v1.GetMemberListsResponse": {
        "properties": {
          "memberLists": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cohort.v1.CohortMemberList"
            },
            "description": "Mapping of cohort name to member list.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.GetMemberPoolsRequest": {
        "properties": {
          "cohorts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cohorts"
        ],
        "type": "object"
      },
      "cohort.v1.GetMemberPoolsResponse": {
        "properties": {
          "memberPools": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cohort.v1.CohortMemberPools"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.GetPoolMembershipsRequest": {
        "properties": {
          "cusips": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate",
            "description": "Factor date for pool membership lookup.",
            "format": "date"
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "cohort.v1.GetPoolMembershipsResponse": {
        "properties": {
          "memberships": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cohort.v1.PoolMemberships"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "cohort.v1.PoolMemberships": {
        "properties": {
          "cohorts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cusip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "cohort.v1.SaveActualPrepaymentsResponse": {
        "properties": {
          "numPrepaymentsSaved": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "cohort.v1.SaveAssociationsResponse": {
        "properties": {
          "numAssociationsSaved": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "cohort.v1.SaveCohortSummariesResponse": {
        "properties": {
          "numSummariesSaved": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "core.BinaryInfo": {
        "properties": {
          "binary": {
            "type": "string"
          },
          "buildOn": {
            "type": "string"
          },
          "gitCommit": {
            "type": "string"
          },
          "gitHash": {
            "type": "string"
          },
          "semVersion": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "core.Date": {
        "description": "Date object\n```json\n{\n  day: 1,\n  month: 10,\n  year: 2020\n}\n```\n| Field | Description |\n| -- | -- |\n| `day` | Day of a month. 0,1~31 |\n| `month` | Month of year 0,1-12 |\n| `year` | Year 0,1-9999 |\n",
        "example": {
          "day": 1,
          "month": 10,
          "year": 2020
        },
        "properties": {
          "day": {
            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "example": 16,
            "format": "number",
            "maximum": 31,
            "type": "integer"
          },
          "month": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "example": 1,
            "format": "number",
            "maximum": 12,
            "type": "integer"
          },
          "year": {
            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year",
            "example": 2020,
            "format": "number",
            "maximum": 9999,
            "type": "integer"
          }
        },
        "required": [
          "year",
          "month",
          "day"
        ],
        "type": "object"
      },
      "core.DateRange": {
        "properties": {
          "end": {
            "$ref": "#/components/schemas/core.Date"
          },
          "start": {
            "$ref": "#/components/schemas/core.Date"
          }
        },
        "type": "object"
      },
      "core.FactorDate": {
        "description": "FactorDate object\n```json\n{\n  day: 1,\n  month: 10,\n  year: 2020\n}\n```\n| Field | Description |\n| -- | -- |\n| `day` | Day of a month. 0,1~31 |\n| `month` | Month of year 0,1-12 |\n| `year` | Year 0,1-9999 |\n",
        "example": {
          "month": 10,
          "year": 2020
        },
        "properties": {
          "month": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "example": 1,
            "format": "number",
            "maximum": 12,
            "type": "integer"
          }
        },
        "required": [
          "year",
          "month"
        ],
        "type": "object"
      },
      "core.FactorDateRange": {
        "properties": {
          "end": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "start": {
            "$ref": "#/components/schemas/core.FactorDate"
          }
        },
        "type": "object"
      },
      "core.Period": {
        "properties": {
          "month": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
            "example": 1,
            "format": "number",
            "maximum": 12,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "core.PositiveRange": {
        "properties": {
          "max": {
            "format": "double",
            "type": "number"
          },
          "min": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "core.Range": {
        "properties": {
          "max": {
            "format": "double",
            "type": "number"
          },
          "min": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "core.YearRange": {
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "min": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "google.protobuf.Any": {
        "additionalProperties": false,
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "google.rpc.Status": {
        "properties": {
          "code": {
            "description": "error code",
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "description": "error details (optional)",
            "items": {
              "$ref": "#/components/schemas/google.protobuf.Any"
            },
            "type": "array"
          },
          "message": {
            "description": "error message",
            "type": "string"
          }
        },
        "type": "object"
      },
      "market.v0.GetStoryViewRequest": {
        "properties": {
          "ticker": {
            "$ref": "#/components/schemas/mbs.AgencyTicker"
          }
        },
        "type": "object"
      },
      "market.v0.GetStoryViewResponse": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date"
          },
          "historicalPeriods": {
            "items": {
              "$ref": "#/components/schemas/core.Period"
            },
            "type": "array"
          },
          "predictedPeriods": {
            "items": {
              "$ref": "#/components/schemas/core.Period"
            },
            "type": "array"
          },
          "stories": {
            "items": {
              "$ref": "#/components/schemas/market.v0.MarketStoryView"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "market.v0.GetViewRequest": {
        "properties": {
          "ticker": {
            "$ref": "#/components/schemas/mbs.AgencyTicker"
          }
        },
        "type": "object"
      },
      "market.v0.GetViewResponse": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date"
          },
          "historicalPeriods": {
            "items": {
              "$ref": "#/components/schemas/core.Period"
            },
            "type": "array"
          },
          "predictedPeriods": {
            "items": {
              "$ref": "#/components/schemas/core.Period"
            },
            "type": "array"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/market.v0.MarketViewRow"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "market.v0.MarketStoryView": {
        "properties": {
          "coupon": {
            "format": "double",
            "type": "number"
          },
          "historical": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "predicted": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "story": {
            "type": "string"
          },
          "vintage": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "market.v0.MarketViewRow": {
        "properties": {
          "aols": {
            "format": "double",
            "type": "number"
          },
          "coupon": {
            "format": "double",
            "type": "number"
          },
          "fico": {
            "format": "double",
            "type": "number"
          },
          "historical": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "ls": {
            "format": "double",
            "type": "number"
          },
          "ltv": {
            "format": "double",
            "type": "number"
          },
          "predicted": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "refi": {
            "format": "double",
            "type": "number"
          },
          "upb": {
            "format": "double",
            "type": "number"
          },
          "vintage": {
            "format": "int32",
            "type": "integer"
          },
          "wac": {
            "format": "double",
            "type": "number"
          },
          "wala": {
            "format": "double",
            "type": "number"
          },
          "wam": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "mbs.Agency": {
        "default": "NULL_AGENCY",
        "enum": [
          "NULL_AGENCY",
          "FNM",
          "FHL",
          "GNM"
        ],
        "type": "string"
      },
      "mbs.AgencyTicker": {
        "default": "NULL_AGENCY_TICKER",
        "enum": [
          "NULL_AGENCY_TICKER",
          "FACI",
          "FACL",
          "FACN",
          "FACT",
          "FG",
          "FG14",
          "FG2M15",
          "FGBI15",
          "FGBI30",
          "FGCI",
          "FGCN",
          "FGCO15",
          "FGCO30",
          "FGF6",
          "FGF7",
          "FGFB",
          "FGG7",
          "FGG8",
          "FGG9",
          "FGH0",
          "FGH1",
          "FGH2",
          "FGH4",
          "FGH8",
          "FGHA",
          "FGHB",
          "FGK3",
          "FGL1",
          "FGLMC",
          "FGMA",
          "FGMB",
          "FGNA",
          "FGNB",
          "FGP4",
          "FGP5",
          "FGP6",
          "FGRL15",
          "FGRL30",
          "FGSB",
          "FGT3",
          "FGT4",
          "FGT5",
          "FGT6",
          "FGT9",
          "FGTW",
          "FGU2",
          "FGU3",
          "FGU4",
          "FGU5",
          "FGU6",
          "FGU7",
          "FGU8",
          "FGU9",
          "FGW0",
          "FGW2",
          "FGW3",
          "FH12",
          "FH13",
          "FH14",
          "FH23",
          "FH24",
          "FH2M15",
          "FH31",
          "FH68",
          "FH70",
          "FH79",
          "FH7B",
          "FHARM",
          "FHBI15",
          "FHBI30",
          "FHCI",
          "FHCO15",
          "FHCO30",
          "FHFB",
          "FHLMC",
          "FHMF10",
          "FHMF15",
          "FHRL15",
          "FHRL30",
          "FHSB",
          "FHTPM",
          "FN2I",
          "FN2L",
          "FN2M",
          "FN2R",
          "FN2S",
          "FN2X",
          "FN2Y",
          "FN9L",
          "FNAB",
          "FNARM",
          "FNBI",
          "FNBL",
          "FNC3",
          "FNC4",
          "FNC7",
          "FNCA",
          "FNCB",
          "FNCI",
          "FNCJ",
          "FNCK",
          "FNCL",
          "FNCN",
          "FNCP",
          "FNCQ",
          "FNCR",
          "FNCS",
          "FNCT",
          "FNCV",
          "FNCW",
          "FNCX",
          "FNCY",
          "FNCZ",
          "FNDX",
          "FNEL",
          "FNFL",
          "FNGC",
          "FNGG",
          "FNGI",
          "FNGL",
          "FNGN15",
          "FNGN30",
          "FNH2",
          "FNH4",
          "FNHA",
          "FNHI",
          "FNHL",
          "FNHN",
          "FNHR",
          "FNHS",
          "FNHT",
          "FNHX",
          "FNHY",
          "FNHZ",
          "FNI3",
          "FNI4",
          "FNI5",
          "FNI6",
          "FNII",
          "FNIL",
          "FNIOF",
          "FNJI",
          "FNJL",
          "FNJM",
          "FNJU",
          "FNKI",
          "FNKL",
          "FNMA",
          "FNMD",
          "FNMG",
          "FNMI",
          "FNML",
          "FNMN",
          "FNMS",
          "FNMT",
          "FNMX",
          "FNMY",
          "FNNA",
          "FNNB",
          "FNNE",
          "FNNF",
          "FNNJ",
          "FNNP",
          "FNNQ",
          "FNOI",
          "FNOL",
          "FNPI",
          "FNPL",
          "FNQI",
          "FNQN",
          "FNQT",
          "FNQY",
          "FNR1",
          "FNR2",
          "FNR3",
          "FNRE",
          "FNRI",
          "FNRL",
          "FNRX",
          "FNTJ",
          "FNTK",
          "FNTQ",
          "FNTT",
          "FNU3",
          "FNU4",
          "FNU6",
          "FNVL",
          "FNX2",
          "FNXA",
          "FNXI",
          "FNXL",
          "FNXM",
          "FNXN",
          "FNXT",
          "FNXX",
          "FNXY",
          "FNYB",
          "FNYH",
          "FNYL",
          "FNYT",
          "FNYX",
          "FNYY",
          "FNZB",
          "FNZC",
          "FNZI",
          "FNZK",
          "FNZL",
          "FNZP",
          "FNZT",
          "FNZX",
          "FNZZ",
          "FR3A",
          "FR3B",
          "FR3C",
          "FR3H",
          "FR3I",
          "FR3J",
          "FR3K",
          "FR3L",
          "FR3M",
          "FR3N",
          "FR3P",
          "FR3Q",
          "FR3R",
          "FR3S",
          "FR3T",
          "FR3U",
          "FR3V",
          "FR3W",
          "FR3X",
          "FR3Y",
          "FR4A",
          "FR4B",
          "FR4E",
          "FR4F",
          "FR4I",
          "FR4L",
          "FR4M",
          "FR4N",
          "FR4O",
          "FR4P",
          "FR4Q",
          "FR4R",
          "FR4S",
          "FR4T",
          "FR4U",
          "FR4V",
          "FR5C",
          "FR5D",
          "FR5H",
          "FR5I",
          "FR5T",
          "FR5U",
          "FR5W",
          "FR5X",
          "FR6G",
          "FR6I",
          "FR6M",
          "FR7D",
          "FR7P",
          "FR7Q",
          "FRCI",
          "FRCL",
          "FRCN",
          "FRCT",
          "FRWA",
          "FRWE",
          "FRWN",
          "FRWV",
          "G2AF",
          "G2AL",
          "G2AP",
          "G2AQ",
          "G2ARM",
          "G2AS",
          "G2AT",
          "G2AX",
          "G2BD",
          "G2BP",
          "G2FB",
          "G2FL",
          "G2FS",
          "G2FT",
          "G2GD",
          "G2GP",
          "G2JM",
          "G2JO",
          "G2MHD",
          "G2ML",
          "G2PB",
          "G2PC",
          "G2PD",
          "G2PF",
          "G2RA",
          "G2RF",
          "G2RG",
          "G2RM",
          "G2SF",
          "G2SL",
          "G2TL",
          "G2TW",
          "G2WA",
          "G2WB",
          "G2WK",
          "G2WL",
          "G2WM",
          "G2WN",
          "GNBD",
          "GNCL",
          "GNCN",
          "GNCS",
          "GNGD",
          "GNGP",
          "GNJO",
          "GNLM",
          "GNLS",
          "GNMH",
          "GNPL",
          "GNPN",
          "GNSF",
          "GNSN",
          "GNTW"
        ],
        "type": "string"
      },
      "mbs.CohortStory": {
        "default": "NULL_COHORT_STORY",
        "enum": [
          "NULL_COHORT_STORY",
          "GENERIC_COHORT",
          "LB085",
          "LB110",
          "LB125",
          "LB150",
          "LB175",
          "LB200",
          "LB200P",
          "MHA080",
          "MHA090",
          "MHA095",
          "MHA100",
          "LTV080",
          "LTV090",
          "LTV095",
          "LTV100",
          "FICO",
          "CS680",
          "CS700",
          "CS720",
          "CS740",
          "CS760",
          "CS760P",
          "INV",
          "RHS",
          "HARP",
          "HLM",
          "NY",
          "PR",
          "TX",
          "CA",
          "FL",
          "CUSTOM",
          "W2D",
          "BROKER",
          "CORRES",
          "RETAIL",
          "TPO",
          "PURCH",
          "REFI",
          "ARVEST",
          "BBT",
          "BOA",
          "CALIB",
          "CITI",
          "DITECH",
          "EVERBK",
          "FIFTH3",
          "FLAG",
          "FRANK",
          "FREE",
          "JPM",
          "LKVIEW",
          "MATRIX",
          "MFIRST",
          "NAVY",
          "NSTAR",
          "NYCB",
          "OCWEN",
          "PENNY",
          "PHH",
          "PNC",
          "PROV",
          "QUICK",
          "RNDPT",
          "SETRS",
          "SUNTR",
          "USB",
          "WELLS"
        ],
        "type": "string"
      },
      "mbs.CollateralType": {
        "default": "NULL_COLLATERAL_TYPE",
        "enum": [
          "NULL_COLLATERAL_TYPE",
          "LOAN",
          "POOL",
          "WHLN"
        ],
        "type": "string"
      },
      "mbs.CouponType": {
        "default": "NULL_COUPON_TYPE",
        "enum": [
          "NULL_COUPON_TYPE",
          "FIX",
          "ARM",
          "VAR"
        ],
        "type": "string"
      },
      "mbs.Product": {
        "default": "NULL_PRODUCT",
        "enum": [
          "NULL_PRODUCT",
          "FHL10MFBALL",
          "FHL15",
          "FHL15BIWK",
          "FHL15COOP",
          "FHL15MFBALL",
          "FHL15RELO",
          "FHL15YR2ND",
          "FHL30",
          "FHL30BIWK",
          "FHL30CONV",
          "FHL30COOP",
          "FHL30FHA",
          "FHL30RELO",
          "FHL40VAR",
          "FHL5BALL",
          "FHL7BALL",
          "FHLARM",
          "FHLARM11COFI",
          "FHLARMCD",
          "FHLARMLIBOR",
          "FHLARMMF",
          "FHLARMNCOFI",
          "FHLARMSOFR",
          "FHLARMTREAS",
          "FHLG10",
          "FHLG10HILTV",
          "FHLG10PPAYP",
          "FHLG15",
          "FHLG15BIWK",
          "FHLG15COOP",
          "FHLG15FHA",
          "FHLG15GNMA",
          "FHLG15HILTV",
          "FHLG15JM",
          "FHLG15PPAYP",
          "FHLG15RELO",
          "FHLG15YR2ND",
          "FHLG20",
          "FHLG20HILTV",
          "FHLG20INITIO",
          "FHLG20JM",
          "FHLG30",
          "FHLG30BIWK",
          "FHLG30COOP",
          "FHLG30FHA",
          "FHLG30GNMA",
          "FHLG30HILTV",
          "FHLG30INIOJM",
          "FHLG30INITIO",
          "FHLG30JM",
          "FHLG30MOD",
          "FHLG30MODSTP",
          "FHLG30PPAYP",
          "FHLG30RELO",
          "FHLG40",
          "FHLG40JM",
          "FHLG40MOD",
          "FHLG40MODSTP",
          "FHLG40PPAYP",
          "FHLG5BALL",
          "FHLG7BALL",
          "FHLGMF",
          "FHLGVARIOUS",
          "FHLMF",
          "FHLMFBALL",
          "FHLN10",
          "FHLN15",
          "FHLN20",
          "FHLN30",
          "FHLR10HILTV",
          "FHLR15",
          "FHLR15BIWK",
          "FHLR15FHA",
          "FHLR15HILTV",
          "FHLR15JM",
          "FHLR15PPAYP",
          "FHLR15RELO",
          "FHLR20",
          "FHLR20HILTV",
          "FHLR20INITIO",
          "FHLR20JM",
          "FHLR30",
          "FHLR30BIWK",
          "FHLR30COOP",
          "FHLR30FHA",
          "FHLR30HILTV",
          "FHLR30INITIO",
          "FHLR30JM",
          "FHLR30MOD",
          "FHLR30MODSTP",
          "FHLR30PPAYP",
          "FHLR30RELO",
          "FHLR40",
          "FHLR40MOD",
          "FHLR40MODSTP",
          "FHLR40PPAYP",
          "FHLRVARIOUS",
          "FHLTPM",
          "FNM10",
          "FNM10MF",
          "FNM15",
          "FNM15BIWK",
          "FNM15COOP",
          "FNM15FHA",
          "FNM15HILTV",
          "FNM15JM",
          "FNM15MF",
          "FNM15MFBALL",
          "FNM15PPAYP",
          "FNM15RELO",
          "FNM15RPL",
          "FNM20",
          "FNM20HILTV",
          "FNM20MF",
          "FNM20RPL",
          "FNM30",
          "FNM30BIWK",
          "FNM30COOP",
          "FNM30FHA",
          "FNM30HILTV",
          "FNM30INITIO",
          "FNM30JM",
          "FNM30MFBALL",
          "FNM30PPAYP",
          "FNM30RELO",
          "FNM30RPL",
          "FNM40",
          "FNM40INITIO",
          "FNM40RPL",
          "FNM40VAR",
          "FNM7",
          "FNM7BALL",
          "FNM7MF",
          "FNM7MFBALL",
          "FNM7RELOBALL",
          "FNM8",
          "FNMARM",
          "FNMARMCD",
          "FNMARMCOFI",
          "FNMARMFHA",
          "FNMARMLIB",
          "FNMARMSOFR",
          "FNMARMTREAS",
          "FNMBALL",
          "FNMDMBS",
          "FNMGEM",
          "FNMGNMMEGA",
          "FNMGPM",
          "FNMGPMFHA",
          "FNMHOMEIMPR",
          "FNMMF",
          "FNMMFARM",
          "FNMMFARMBALL",
          "FNMPLFHA",
          "FNMREMSTR",
          "FNMREVBUYDN",
          "FNMWABALLMF",
          "FNMWAFRMF",
          "FNMWAFRSF",
          "FNMWL",
          "GNM10",
          "GNM15",
          "GNM20",
          "GNM30",
          "GNMBD",
          "GNMCL",
          "GNMGEM",
          "GNMGPM",
          "GNMII15C",
          "GNMII15M",
          "GNMII15MJM",
          "GNMII20C",
          "GNMII20M",
          "GNMII30C",
          "GNMII30M",
          "GNMII30MJM",
          "GNMIIARM",
          "GNMIIBD",
          "GNMIIFHASEC",
          "GNMIIGEM",
          "GNMIIGPM",
          "GNMIIMH",
          "GNMIIREVMTG",
          "GNMMH",
          "GNMPL",
          "GNMPN",
          "GNMSN"
        ],
        "type": "string"
      },
      "pool.v1.Allocation": {
        "description": "Pool Allocation of Remaining Principal Balance",
        "properties": {
          "numberLoans": {
            "description": "Number of loans remaining.",
            "format": "int32",
            "type": "integer"
          },
          "percentageRpb": {
            "description": "Remaining Principal Balance in %",
            "format": "double",
            "type": "number"
          },
          "rpb": {
            "description": "Remaining Principal Balance in $",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "pool.v1.CheckCoverageRequest": {
        "properties": {
          "cusips": {
            "description": "CUSIPs to check coverage for.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.CheckCoverageResponse": {
        "properties": {
          "summary": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolCoverageSummary"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.FindRequest": {
        "properties": {
          "actualCprRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "agency": {
            "$ref": "#/components/schemas/mbs.Agency"
          },
          "agencyTicker": {
            "$ref": "#/components/schemas/mbs.AgencyTicker"
          },
          "collateralType": {
            "$ref": "#/components/schemas/mbs.CollateralType"
          },
          "couponRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "couponType": {
            "$ref": "#/components/schemas/mbs.CouponType"
          },
          "cusips": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "eligibleTbaOnly": {
            "type": "boolean"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate",
            "description": "Factor date for which to fetch the data, default to the current factor date."
          },
          "issueDateRange": {
            "$ref": "#/components/schemas/core.DateRange"
          },
          "issueUpbRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "limit": {
            "format": "int32",
            "type": "integer"
          },
          "maturityDateRange": {
            "$ref": "#/components/schemas/core.DateRange"
          },
          "maxCsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "maxOlsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "minCsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "minOlsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "products": {
            "items": {
              "$ref": "#/components/schemas/mbs.Product"
            },
            "type": "array"
          },
          "standardCouponOnly": {
            "type": "boolean"
          },
          "standardProduct": {
            "type": "boolean"
          },
          "upbRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "vintageRange": {
            "$ref": "#/components/schemas/core.YearRange"
          },
          "wacRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "waocsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "waolsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "waoltvRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          }
        },
        "type": "object"
      },
      "pool.v1.FindResponse": {
        "properties": {
          "pools": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.Pool"
            },
            "description": "Mapping of CUSIP to pool object.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetActualPrepaymentsRequest": {
        "properties": {
          "cusips": {
            "description": "Pools to fetch.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "factorDateRange": {
            "$ref": "#/components/schemas/core.FactorDateRange",
            "description": "Period for which to fetch the data, default to the current period."
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetActualPrepaymentsResponse": {
        "properties": {
          "prepayments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/prepayment.PrepaymentActuals"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetAllServicersResponse": {
        "properties": {
          "servicers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "pool.v1.GetCharacteristicsRequest": {
        "properties": {
          "cusips": {
            "description": "Pool CUSIPs to fetch characteristics.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate",
            "description": "Factor date for which to fetch the data, default to the current factor date."
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetCharacteristicsResponse": {
        "properties": {
          "characteristics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolCharacteristics"
            },
            "description": "Mapping of pool characteristics.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetCurrentFactorDateResponse": {
        "properties": {
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          }
        },
        "type": "object"
      },
      "pool.v1.GetCusipFromPoolNumberRequest": {
        "properties": {
          "poolNumbers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "poolNumbers"
        ],
        "type": "object"
      },
      "pool.v1.GetCusipFromPoolNumberResponse": {
        "properties": {
          "cusips": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetGeneralDistributionsRequest": {
        "properties": {
          "cusips": {
            "description": "Pool CUSIPs to fetch distributions.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetGeneralDistributionsResponse": {
        "properties": {
          "distributions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolGeneralDistributions"
            },
            "description": "Mapping of Pool distributions.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetGeographicDistributionRequest": {
        "properties": {
          "cusips": {
            "description": "Pool CUSIPs to fetch geographical distributions.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetGeographicDistributionResponse": {
        "properties": {
          "geos": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolGeographicDistribution"
            },
            "description": "Mapping of pool geographical distributions.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetQuartilesRequest": {
        "properties": {
          "cusips": {
            "description": "Pool CUSIPs to fetch quartiles.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetQuartilesResponse": {
        "properties": {
          "quartiles": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolQuartileStatistics"
            },
            "description": "Mapping of Pool Quartiles.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetRequest": {
        "properties": {
          "cusips": {
            "description": "Pool CUSIPs to fetch Pool information.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate",
            "description": "Factor date for which to fetch the data, default to the current factor date."
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetResponse": {
        "properties": {
          "pools": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.Pool"
            },
            "description": "Mapping of CUSIP to pool object.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetServicersRequest": {
        "properties": {
          "cusips": {
            "description": "Pool CUSIPs to fetch servicers.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetServicersResponse": {
        "properties": {
          "servicers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolServicerDistribution"
            },
            "description": "Mapping of Pool Servicers.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.GetSummaryRequest": {
        "properties": {
          "cusips": {
            "description": "Pool CUSIPs to fetch summaries.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "cusips"
        ],
        "type": "object"
      },
      "pool.v1.GetSummaryResponse": {
        "properties": {
          "summary": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.PoolSummary"
            },
            "description": "Mapping of Pool summaries.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.OccupancySummary": {
        "description": "Loans occupancies composition between purchase and reFi.",
        "properties": {
          "percentageInvestor": {
            "description": "Proportion of investors.",
            "format": "double",
            "type": "number"
          },
          "percentageOwner": {
            "description": "Proportion of first home owners.",
            "format": "double",
            "type": "number"
          },
          "percentageSecondHome": {
            "description": "Proportion of second home owners.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "pool.v1.Pool": {
        "description": "Pool attributes.",
        "properties": {
          "agency": {
            "$ref": "#/components/schemas/mbs.Agency"
          },
          "agencyTicker": {
            "$ref": "#/components/schemas/mbs.AgencyTicker"
          },
          "collateralType": {
            "$ref": "#/components/schemas/mbs.CollateralType"
          },
          "coupon": {
            "format": "double",
            "type": "number"
          },
          "couponType": {
            "$ref": "#/components/schemas/mbs.CouponType"
          },
          "cpr1": {
            "format": "double",
            "type": "number"
          },
          "cusip": {
            "type": "string"
          },
          "factor": {
            "format": "double",
            "type": "number"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "invPct": {
            "format": "double",
            "type": "number"
          },
          "issNumLoans": {
            "format": "int32",
            "type": "integer"
          },
          "issUpb": {
            "format": "double",
            "type": "number"
          },
          "issWac": {
            "format": "double",
            "type": "number"
          },
          "issWala": {
            "format": "int32",
            "type": "integer"
          },
          "issueDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "maturityDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "maxCs": {
            "format": "int32",
            "type": "integer"
          },
          "maxLtv": {
            "format": "int32",
            "type": "integer"
          },
          "maxOls": {
            "format": "double",
            "type": "number"
          },
          "maxServicer": {
            "type": "string"
          },
          "maxServicerPct": {
            "format": "double",
            "type": "number"
          },
          "maxState": {
            "type": "string"
          },
          "maxStatePct": {
            "format": "double",
            "type": "number"
          },
          "minCs": {
            "format": "int32",
            "type": "integer"
          },
          "minLtv": {
            "format": "int32",
            "type": "integer"
          },
          "minOls": {
            "format": "double",
            "type": "number"
          },
          "numLoans": {
            "format": "int32",
            "type": "integer"
          },
          "origStory": {
            "type": "string"
          },
          "origStoryPct": {
            "format": "double",
            "type": "number"
          },
          "poolNumber": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/mbs.Product"
          },
          "productionYear": {
            "format": "int32",
            "type": "integer"
          },
          "purchPct": {
            "format": "double",
            "type": "number"
          },
          "refiPct": {
            "format": "double",
            "type": "number"
          },
          "smm1": {
            "format": "double",
            "type": "number"
          },
          "upb": {
            "format": "double",
            "type": "number"
          },
          "wac": {
            "format": "double",
            "type": "number"
          },
          "wala": {
            "format": "double",
            "type": "number"
          },
          "wals": {
            "format": "double",
            "type": "number"
          },
          "wam": {
            "format": "double",
            "type": "number"
          },
          "waocs": {
            "format": "int32",
            "type": "integer"
          },
          "waols": {
            "format": "double",
            "type": "number"
          },
          "waoltv": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "pool.v1.PoolCharacteristics": {
        "description": "Pool characteristics: security factor, WAC, WALA, WAM, SMM.",
        "properties": {
          "cusip": {
            "type": "string"
          },
          "factor": {
            "description": "Pool security factor.",
            "format": "double",
            "type": "number"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "smm": {
            "format": "double",
            "type": "number"
          },
          "wac": {
            "format": "double",
            "type": "number"
          },
          "wala": {
            "format": "int32",
            "type": "integer"
          },
          "wam": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "pool.v1.PoolCoverageSummary": {
        "properties": {
          "covered": {
            "description": "If the CUSIP is covered by infima.",
            "type": "boolean"
          },
          "cusip": {
            "description": "CUSIP of security.",
            "type": "string"
          },
          "reasons": {
            "description": "Array of reasons why the CUSIP is not covered.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "pool.v1.PoolGeneralDistributions": {
        "description": "General pool Allocations",
        "properties": {
          "cusip": {
            "type": "string"
          },
          "distributions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.Allocation"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.PoolGeographicDistribution": {
        "description": "Pool State Geographical Distribution.",
        "properties": {
          "cusip": {
            "type": "string"
          },
          "states": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.Allocation"
            },
            "description": "Array of state allocations.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.PoolQuartileStatistics": {
        "description": "Quartiles data on loan variables: OCS, OLTV, OLS, Age, ODTI.",
        "properties": {
          "age": {
            "$ref": "#/components/schemas/pool.v1.Quartiles",
            "description": "Age of the loan."
          },
          "coupon": {
            "$ref": "#/components/schemas/pool.v1.Quartiles",
            "description": "Loan coupon."
          },
          "cusip": {
            "type": "string"
          },
          "ocltv": {
            "$ref": "#/components/schemas/pool.v1.Quartiles",
            "description": "Original Combined Loan-To-Value at issuance."
          },
          "ocs": {
            "$ref": "#/components/schemas/pool.v1.Quartiles",
            "description": "Borrower original credit score."
          },
          "odti": {
            "$ref": "#/components/schemas/pool.v1.Quartiles",
            "description": "Original Debt-To-Income at issuance."
          },
          "ols": {
            "$ref": "#/components/schemas/pool.v1.Quartiles",
            "description": "Original Loan Size at issuance."
          },
          "oltv": {
            "$ref": "#/components/schemas/pool.v1.Quartiles",
            "description": "Original Loan-To-Value at issuance."
          }
        },
        "type": "object"
      },
      "pool.v1.PoolServicerDistribution": {
        "description": "Pool Servicers allocations.",
        "properties": {
          "cusip": {
            "type": "string"
          },
          "servicers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.Allocation"
            },
            "description": "Array of servicers allocations.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pool.v1.PoolSummary": {
        "description": "Pool summary provides information about Purposes and Occupancy of the loans.",
        "properties": {
          "cusip": {
            "type": "string"
          },
          "occupancy": {
            "$ref": "#/components/schemas/pool.v1.OccupancySummary",
            "description": "Occupancy type summary."
          },
          "purpose": {
            "$ref": "#/components/schemas/pool.v1.PurposeSummary",
            "description": "Loan purpose summary."
          }
        },
        "type": "object"
      },
      "pool.v1.PurposeSummary": {
        "description": "Loans purposes composition between purchase and reFi.",
        "properties": {
          "percentagePurchase": {
            "description": "Proportion of purchases.",
            "format": "double",
            "type": "number"
          },
          "percentageRefi": {
            "description": "Proportion of refinances.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "pool.v1.Quartiles": {
        "description": "Quartile statistics.",
        "properties": {
          "average": {
            "format": "double",
            "type": "number"
          },
          "first": {
            "format": "double",
            "type": "number"
          },
          "maximum": {
            "format": "double",
            "type": "number"
          },
          "minimum": {
            "format": "double",
            "type": "number"
          },
          "second": {
            "format": "double",
            "type": "number"
          },
          "third": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "pool.v1.SaveActualPrepaymentsResponse": {
        "properties": {
          "numPrepaymentsSaved": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "pool.v1.SaveCoverageResponse": {
        "type": "object"
      },
      "prediction.v1.AsOfMetadata": {
        "description": "The as-of date and its last published timestamp.",
        "properties": {
          "as_of": {
            "description": "As of date (YYYY-MM-DD)",
            "example": "2022-02-01",
            "format": "date",
            "type": "string"
          },
          "last_published": {
            "description": "The last published timestamp for the given as-of date (RFC 3339 date-time string).",
            "example": "2022-02-21T17:32:28Z",
            "format": "date-time",
            "title": "Last published timestamp",
            "type": "string"
          }
        },
        "title": "Metadata about the as-of date.",
        "type": "object"
      },
      "prediction.v1.GetAvailableAsOfsBulkResponse": {
        "description": "A Response containing an array of as_of dates along with their last published timestamps.",
        "example": {
          "as_ofs": [
            {
              "as_of": "2022-01-01",
              "last_published": "2022-01-21T17:32:28Z"
            },
            {
              "as_of": "2022-02-01",
              "last_published": "2022-02-21T17:32:28Z"
            }
          ]
        },
        "properties": {
          "as_ofs": {
            "description": "An array of available as-of date objects.",
            "example": [
              {
                "as_of": "2022-01-01",
                "last_published": "2022-01-21T17:32:28Z"
              },
              {
                "as_of": "2022-02-01",
                "last_published": "2022-02-21T17:32:28Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/prediction.v1.AsOfMetadata"
            },
            "title": "List of available as-of date objects",
            "type": "array"
          }
        },
        "title": "GetAvailableAsOfsBulk Response",
        "type": "object"
      },
      "prediction.v1.GetAvailableAsOfsRequest": {
        "properties": {
          "symbol": {
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "type": "object"
      },
      "prediction.v1.GetAvailableAsOfsResponse": {
        "properties": {
          "asOfs": {
            "items": {
              "$ref": "#/components/schemas/core.Date"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "prediction.v1.GetCSVFileResponse": {
        "description": "A response containing a URL to the prediction CSV file.",
        "properties": {
          "as_of": {
            "description": "The prediction file as-of date",
            "example": "2022-02-01",
            "format": "date",
            "title": "CSV file as-of date",
            "type": "string"
          },
          "correction_flag": {
            "description": "In case the prediction publication is a correction this flag will be set to true.",
            "example": true,
            "title": "A correction flag",
            "type": "boolean"
          },
          "correction_message": {
            "description": "A message that is made available describing a correction to the prediction publication.",
            "example": "correction message text",
            "title": "A correction message",
            "type": "string"
          },
          "published": {
            "description": "File published timestamp - RFC 3339 date-time string.",
            "example": "2022-02-21T17:32:28Z",
            "format": "date-time",
            "title": "Published timestamp",
            "type": "string"
          },
          "url": {
            "description": "pre-signed URL of the file which can be downloaded",
            "example": "https://infima-data-delivery.s3.us-west-2.amazonaws.com/as_of=2022_02_01/predictions.csv.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA26XAT4N36VDEBDQL%2F20220221%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220221T155418Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=21cf08d9453e4e5a8a8b9784e437b6580f4c152305314024b7a416a1826218e1",
            "format": "uri",
            "title": "pre-signed URL",
            "type": "string"
          }
        },
        "title": "GetCSVFile Response",
        "type": "object"
      },
      "prediction.v1.GetLatestAsOfRequest": {
        "properties": {
          "date": {
            "$ref": "#/components/schemas/core.Date"
          }
        },
        "type": "object"
      },
      "prediction.v1.GetLatestAsOfResponse": {
        "properties": {
          "latestAsOf": {
            "$ref": "#/components/schemas/core.Date",
            "description": "Latest as of date for predictions."
          }
        },
        "type": "object"
      },
      "prediction.v1.GetNMonthsAheadRequest": {
        "properties": {
          "factorDateRange": {
            "$ref": "#/components/schemas/core.FactorDateRange",
            "description": "Range of factor dates for query."
          },
          "numMonths": {
            "description": "Number of months ahead.",
            "format": "int32",
            "type": "integer"
          },
          "returnAllAsOfs": {
            "description": "Return all as-of dates for a factor date instead of just latest.",
            "type": "boolean"
          },
          "symbols": {
            "description": "Pool and cohort names to fetch historical prepayment predictions.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "symbols",
          "numMonths"
        ],
        "type": "object"
      },
      "prediction.v1.GetNMonthsAheadResponse": {
        "properties": {
          "predictions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/prediction.v1.PrepaymentPredictionAheadSlice"
            },
            "description": "Mapping of symbol (ie, CUSIP or cohort name) to predictions.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "prediction.v1.GetOneMonthAheadRequest": {
        "properties": {
          "factorDateRange": {
            "$ref": "#/components/schemas/core.FactorDateRange",
            "description": "Range of factor dates for query."
          },
          "returnAllAsOfs": {
            "description": "Return all as-of dates for a factor date instead of just latest.",
            "type": "boolean"
          },
          "symbols": {
            "description": "Pool and cohort names to fetch historical prepayment predictions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "symbols"
        ],
        "type": "object"
      },
      "prediction.v1.GetOneMonthAheadResponse": {
        "properties": {
          "predictions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/prediction.v1.PrepaymentPredictionAheadSlice"
            },
            "description": "Mapping of symbol (ie, CUSIP or cohort name) to predictions.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "prediction.v1.GetRecentUpdatesBulkResponse": {
        "description": "A response containing the recent updates as an array of objects.",
        "example": {
          "recent_updates": [
            {
              "as_of": "2021-01-01",
              "correction_flag": false,
              "correction_message": null,
              "published": "2022-01-21T17:32:28Z"
            },
            {
              "as_of": "2021-02-01",
              "correction_flag": true,
              "correction_message": "correction message text",
              "published": "2022-01-21T17:32:28Z"
            }
          ]
        },
        "properties": {
          "recent_updates": {
            "description": "Array of update objects.",
            "example": [
              {
                "as_of": "2021-01-01",
                "correction_flag": false,
                "correction_message": null,
                "published": "2022-01-21T17:32:28Z"
              },
              {
                "as_of": "2021-02-01",
                "correction_flag": true,
                "correction_message": "lorem ipsum",
                "published": "2022-01-21T17:32:28Z"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/prediction.v1.RecentUpdate"
            },
            "title": "List of recent updates",
            "type": "array"
          }
        },
        "title": "GetRecentUpdatesBulk Response",
        "type": "object"
      },
      "prediction.v1.GetRequest": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date",
            "description": "As of date for predictions."
          },
          "symbols": {
            "description": "Pool CUSIPs or cohort names to fetch individual prepayment predictions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "symbols"
        ],
        "type": "object"
      },
      "prediction.v1.GetResponse": {
        "properties": {
          "predictions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/prediction.v1.PrepaymentPredictionAsOfSlice"
            },
            "description": "Mapping of symbol (ie, CUSIP or cohort name) to predictions.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "prediction.v1.MonthlyPrepaymentAheadPrediction": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date"
          },
          "cpr": {
            "format": "double",
            "type": "number"
          },
          "distribution": {
            "$ref": "#/components/schemas/prediction.v1.PrepaymentPredictionDistribution"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "smm": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "prediction.v1.MonthlyPrepaymentAsOfPrediction": {
        "properties": {
          "cpr": {
            "format": "double",
            "type": "number"
          },
          "distribution": {
            "$ref": "#/components/schemas/prediction.v1.PrepaymentPredictionDistribution"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "smm": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "prediction.v1.MonthlyPrepaymentPrediction": {
        "properties": {
          "cpr": {
            "format": "double",
            "type": "number"
          },
          "distribution": {
            "$ref": "#/components/schemas/prediction.v1.PrepaymentPredictionDistribution"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "smm": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "prediction.v1.PrepaymentPredictionAheadSlice": {
        "properties": {
          "ahead": {
            "format": "int32",
            "type": "integer"
          },
          "symbol": {
            "type": "string"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/prediction.v1.MonthlyPrepaymentAheadPrediction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "prediction.v1.PrepaymentPredictionAsOfSlice": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date"
          },
          "symbol": {
            "type": "string"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/prediction.v1.MonthlyPrepaymentAsOfPrediction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "prediction.v1.PrepaymentPredictionDistribution": {
        "properties": {
          "cprHigh": {
            "format": "double",
            "type": "number"
          },
          "cprLow": {
            "format": "double",
            "type": "number"
          },
          "smmHigh": {
            "format": "double",
            "type": "number"
          },
          "smmLow": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "prediction.v1.PrepaymentPredictionSeries": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date"
          },
          "symbol": {
            "type": "string"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/prediction.v1.MonthlyPrepaymentPrediction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "prediction.v1.RecentUpdate": {
        "properties": {
          "as_of": {
            "description": "Prediction as-of date.",
            "example": "2022-02-01",
            "format": "date",
            "title": "As-of date",
            "type": "string"
          },
          "correction_flag": {
            "description": "In case the prediction publication is a correction this flag will be set to true.",
            "example": true,
            "title": "A correction flag",
            "type": "boolean"
          },
          "correction_message": {
            "description": "A message that is made available describing a correction to the prediction publication.",
            "example": "correction message text",
            "title": "A correction message",
            "type": "string"
          },
          "published": {
            "description": "File published timestamp - RFC 3339 date-time string.",
            "example": "2022-02-21T17:32:28Z",
            "format": "date-time",
            "title": "Published timestamp",
            "type": "string"
          }
        },
        "title": "GetRecentUpdatesBulk",
        "type": "object"
      },
      "prediction.v1.SaveAvailableAsOfsResponse": {
        "properties": {
          "numAsofsSaved": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prediction.v1.SaveFactorDateLatestAsOfsResponse": {
        "type": "object"
      },
      "prediction.v1.SaveResponse": {
        "properties": {
          "numPredictionsSaved": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prepayment.PrepaymentActual": {
        "properties": {
          "cpr": {
            "format": "double",
            "type": "number"
          },
          "factorDate": {
            "$ref": "#/components/schemas/core.FactorDate"
          },
          "smm": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "prepayment.PrepaymentActuals": {
        "properties": {
          "symbol": {
            "type": "string"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/prepayment.PrepaymentActual"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "pricing.v0.GetAvailableAsOfsRequest": {
        "properties": {
          "symbol": {
            "title": "symbol is meant as an alias for cusip or cohort",
            "type": "string"
          }
        },
        "type": "object"
      },
      "pricing.v0.GetAvailableAsOfsResponse": {
        "properties": {
          "asOfs": {
            "items": {
              "$ref": "#/components/schemas/core.Date"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "pricing.v0.GetRequest": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date",
            "description": "As of date for predictions."
          },
          "symbols": {
            "description": "CUSIPs or cohorts to fetch individual pricing predictions.",
            "example": [
              "31417EUD1"
            ],
            "format": "array",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "pricing.v0.GetResponse": {
        "properties": {
          "predictions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pricing.v0.PricingPrediction"
            },
            "description": "Mapping of prediction.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "pricing.v0.PricingPrediction": {
        "properties": {
          "asOf": {
            "$ref": "#/components/schemas/core.Date"
          },
          "payup": {
            "format": "float",
            "type": "number"
          },
          "price": {
            "format": "float",
            "type": "number"
          },
          "symbol": {
            "title": "symbol is meant as an alias for cusip or cohort",
            "type": "string"
          }
        },
        "type": "object"
      },
      "pricing.v0.SavePricePredictionsResponse": {
        "properties": {
          "numPredictionsSaved": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "search.v0.AttributesCriterion": {
        "properties": {
          "couponRange": {
            "$ref": "#/components/schemas/core.PositiveRange",
            "title": "Based on Pools Stream"
          },
          "cprRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "investorOccRange": {
            "$ref": "#/components/schemas/core.PositiveRange",
            "title": "Based on Pools Summaries"
          },
          "issueDateRange": {
            "$ref": "#/components/schemas/core.DateRange"
          },
          "issueUpbRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "maturityDateRange": {
            "$ref": "#/components/schemas/core.DateRange"
          },
          "maxCsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "maxOlsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "minCsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "minOlsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "upbRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "wacRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "waocsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "waolsRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "waoltvRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          }
        },
        "type": "object"
      },
      "search.v0.CohortUniverse": {
        "properties": {
          "cohorts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "search.v0.DeleteQueryRequest": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "search.v0.DeleteQueryResponse": {
        "properties": {
          "deleted": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "search.v0.GeoCriterion": {
        "properties": {
          "excludes": {
            "items": {
              "$ref": "#/components/schemas/search.v0.Proportion"
            },
            "type": "array"
          },
          "includes": {
            "items": {
              "$ref": "#/components/schemas/search.v0.Proportion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "search.v0.GetAllQueryNamesResponse": {
        "properties": {
          "names": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "search.v0.GetQueryRequest": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "search.v0.GetQueryResponse": {
        "properties": {
          "found": {
            "type": "boolean"
          },
          "query": {
            "$ref": "#/components/schemas/search.v0.SearchPoolsRequest"
          }
        },
        "type": "object"
      },
      "search.v0.PredictionCriterion": {
        "properties": {
          "pred1mCprDeltaRange": {
            "$ref": "#/components/schemas/core.Range"
          },
          "pred1mCprRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "pred3mCprRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          },
          "pred6mCprRange": {
            "$ref": "#/components/schemas/core.PositiveRange"
          }
        },
        "type": "object"
      },
      "search.v0.Proportion": {
        "properties": {
          "maxProportion": {
            "format": "double",
            "type": "number"
          },
          "minProportion": {
            "format": "double",
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "search.v0.SaveQueryRequest": {
        "properties": {
          "saved": {
            "$ref": "#/components/schemas/search.v0.SavedQuery"
          }
        },
        "type": "object"
      },
      "search.v0.SaveQueryResponse": {
        "type": "object"
      },
      "search.v0.SavedQuery": {
        "properties": {
          "name": {
            "type": "string"
          },
          "query": {
            "$ref": "#/components/schemas/search.v0.SearchPoolsRequest"
          }
        },
        "type": "object"
      },
      "search.v0.SearchCriterion": {
        "properties": {
          "geo": {
            "$ref": "#/components/schemas/search.v0.GeoCriterion"
          },
          "servicer": {
            "$ref": "#/components/schemas/search.v0.ServicerCriterion"
          }
        },
        "type": "object"
      },
      "search.v0.SearchPoolsRequest": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/search.v0.AttributesCriterion"
          },
          "cohorts": {
            "$ref": "#/components/schemas/search.v0.CohortUniverse"
          },
          "criteria": {
            "$ref": "#/components/schemas/search.v0.SearchCriterion"
          },
          "limit": {
            "format": "int32",
            "type": "integer"
          },
          "predictions": {
            "$ref": "#/components/schemas/search.v0.PredictionCriterion"
          }
        },
        "type": "object"
      },
      "search.v0.SearchPoolsResponse": {
        "properties": {
          "msg": {
            "type": "string"
          },
          "pools": {
            "additionalProperties": {
              "$ref": "#/components/schemas/pool.v1.Pool"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "search.v0.ServicerCriterion": {
        "properties": {
          "excludes": {
            "items": {
              "$ref": "#/components/schemas/search.v0.Proportion"
            },
            "type": "array"
          },
          "includes": {
            "items": {
              "$ref": "#/components/schemas/search.v0.Proportion"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "tags": [
    {
      "description": "Market related APIs",
      "name": "MarketExposed",
      "x-displayName": "Market"
    },
    {
      "description": "Pricing related APIs",
      "name": "PricingExposed",
      "x-displayName": "Pricing"
    },
    {
      "description": "Prediction related APIs",
      "name": "PredictionExposed",
      "x-displayName": "Prediction"
    },
    {
      "description": "Pool related APIs",
      "name": "PoolExposed",
      "x-displayName": "Pool"
    },
    {
      "description": "Cohort related APIs",
      "name": "CohortExposed",
      "x-displayName": "Cohort"
    },
    {
      "description": "Search related APIs",
      "name": "SearchExposed",
      "x-displayName": "Search"
    },
    {
      "name": "CohortV1"
    },
    {
      "name": "MarketV0"
    },
    {
      "name": "PoolV1"
    },
    {
      "name": "PredictionV1"
    },
    {
      "name": "PricingV0"
    },
    {
      "name": "SearchV0"
    }
  ],
  "x-tagGroups": [
    {
      "tags": [
        "PredictionExposed"
      ],
      "name": "Products"
    }
  ]
}
